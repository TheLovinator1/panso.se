# Generated by Django 5.1.2 on 2024-10-19 23:10
# cSpell:disable
from __future__ import annotations

from typing import TYPE_CHECKING, ClassVar

import django.db.models.deletion
from django.db import migrations, models

if TYPE_CHECKING:
    from django.db.migrations.operations.base import Operation


class Migration(migrations.Migration):
    """Initial migration."""

    initial = True

    dependencies: ClassVar[list[tuple[str, str]]] = []

    operations: ClassVar[list[Operation]] = [
        migrations.CreateModel(
            name="KeySpecification",
            fields=[
                (
                    "id",
                    models.PositiveBigIntegerField(help_text="Key specification ID", primary_key=True, serialize=False),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, help_text="Created at")),
                ("updated_at", models.DateTimeField(auto_now=True, help_text="Updated at")),
                ("name", models.TextField()),
                ("value", models.TextField()),
                ("description", models.TextField(blank=True)),
                ("is_key_text", models.BooleanField(help_text="Is key text")),
            ],
        ),
        migrations.CreateModel(
            name="KeyText",
            fields=[
                ("key_text", models.TextField(help_text="Key text", primary_key=True, serialize=False)),
                ("created_at", models.DateTimeField(auto_now_add=True, help_text="Created at")),
                ("updated_at", models.DateTimeField(auto_now=True, help_text="Updated at")),
            ],
        ),
        migrations.CreateModel(
            name="Price",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, help_text="Created at")),
                ("updated_at", models.DateTimeField(auto_now=True, help_text="Updated at")),
                (
                    "list_price_ex_vat",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="List price excluding VAT",
                        max_digits=10,
                        null=True,
                    ),
                ),
                ("list_price", models.PositiveBigIntegerField(help_text="List price", null=True)),
                (
                    "price_ex_vat",
                    models.DecimalField(decimal_places=2, help_text="Price excluding VAT", max_digits=10, null=True),
                ),
                ("price", models.PositiveBigIntegerField(help_text="Price", null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Qty",
            fields=[
                ("store_id", models.PositiveBigIntegerField(help_text="Store ID", primary_key=True, serialize=False)),
                ("created_at", models.DateTimeField(auto_now_add=True, help_text="Created at")),
                ("updated_at", models.DateTimeField(auto_now=True, help_text="Updated at")),
                ("qty", models.PositiveBigIntegerField(help_text="Qty", null=True)),
                ("blocked", models.BooleanField(help_text="Blocked", null=True)),
                ("restock_days", models.PositiveBigIntegerField(help_text="Restock days", null=True)),
                ("is_delayed", models.BooleanField(help_text="Is delayed", null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                ("id", models.PositiveBigIntegerField(help_text="Product ID", primary_key=True, serialize=False)),
                ("created_at", models.DateTimeField(auto_now_add=True, help_text="Created at")),
                ("updated_at", models.DateTimeField(auto_now=True, help_text="Updated at")),
                ("active", models.BooleanField(help_text="Active")),
                ("bargain_parent_id", models.PositiveBigIntegerField(help_text="Bargain parent ID", null=True)),
                ("category_id", models.PositiveBigIntegerField(help_text="Category ID", null=True)),
                (
                    "freight_cost",
                    models.DecimalField(decimal_places=2, help_text="Freight cost", max_digits=10, null=True),
                ),
                ("hidden", models.BooleanField(help_text="Hidden")),
                ("hype_count", models.PositiveBigIntegerField(help_text="Hype count", null=True)),
                ("hype_score", models.PositiveBigIntegerField(help_text="Hype score", null=True)),
                ("image", models.TextField(blank=True, help_text="Image")),
                ("is_assembly", models.BooleanField(help_text="Is assembly")),
                ("is_bargain", models.BooleanField(help_text="Is bargain")),
                ("is_consignment_product", models.BooleanField(help_text="Is consignment product")),
                ("is_easy_build", models.BooleanField(help_text="Is easy build")),
                ("is_monthly_subscription", models.BooleanField(help_text="Is monthly subscription")),
                ("is_virtual", models.BooleanField(help_text="Is virtual")),
                ("manufacturer_id", models.PositiveBigIntegerField(help_text="Manufacturer ID", null=True)),
                ("name", models.TextField()),
                ("purchase_status", models.TextField(blank=True, help_text="Purchase status")),
                ("qty_limit", models.PositiveBigIntegerField(help_text="Qty limit", null=True)),
                ("release_date", models.DateField(help_text="Release date", null=True)),
                ("review_count", models.PositiveBigIntegerField(help_text="Review count", null=True)),
                (
                    "review_score",
                    models.DecimalField(decimal_places=2, help_text="Review score", max_digits=10, null=True),
                ),
                ("selling_point", models.TextField(blank=True, help_text="Selling point")),
                ("template_id", models.PositiveBigIntegerField(help_text="Template ID", null=True)),
                ("url_name", models.TextField(blank=True, help_text="URL name")),
                ("vat", models.DecimalField(decimal_places=2, help_text="VAT", max_digits=10, null=True)),
                (
                    "key_specifications",
                    models.ManyToManyField(help_text="Key specifications", to="inet.keyspecification"),
                ),
                ("key_text", models.ManyToManyField(help_text="Key text", to="inet.keytext")),
                (
                    "price",
                    models.ForeignKey(help_text="Price", on_delete=django.db.models.deletion.CASCADE, to="inet.price"),
                ),
                ("qty", models.ForeignKey(help_text="Qty", on_delete=django.db.models.deletion.CASCADE, to="inet.qty")),
            ],
        ),
    ]
