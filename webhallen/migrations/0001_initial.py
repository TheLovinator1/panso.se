# Generated by Django 5.1.1 on 2024-10-07 01:52
from __future__ import annotations

from typing import TYPE_CHECKING, ClassVar

import django.contrib.postgres.indexes
import django.db.models.manager
from django.db import migrations, models

if TYPE_CHECKING:
    from django.db.migrations.operations.base import Operation


class Migration(migrations.Migration):
    """Initial migration for the Webhallen app."""

    initial = True
    dependencies: ClassVar[list[tuple[str, str]]] = []

    operations: ClassVar[list[Operation]] = [
        migrations.CreateModel(
            name="SitemapArticle",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("sitemap", models.TextField(help_text="The sitemap XML")),
                ("created_at", models.DateTimeField(auto_now_add=True, help_text="When the data was fetched")),
                ("updated_at", models.DateTimeField(auto_now=True, help_text="When the data was last updated")),
            ],
            options={
                "verbose_name": "Webhallen Sitemap - article",
                "verbose_name_plural": "Webhallen Sitemap - article",
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="SitemapCampaign",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("sitemap", models.TextField(help_text="The sitemap XML")),
                ("created_at", models.DateTimeField(auto_now_add=True, help_text="When the data was fetched")),
                ("updated_at", models.DateTimeField(auto_now=True, help_text="When the data was last updated")),
            ],
            options={
                "verbose_name": "Webhallen Sitemap - campaign",
                "verbose_name_plural": "Webhallen Sitemap - campaign",
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="SitemapCategory",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("sitemap", models.TextField(help_text="The sitemap XML")),
                ("created_at", models.DateTimeField(auto_now_add=True, help_text="When the data was fetched")),
                ("updated_at", models.DateTimeField(auto_now=True, help_text="When the data was last updated")),
            ],
            options={
                "verbose_name": "Webhallen Sitemap - category",
                "verbose_name_plural": "Webhallen Sitemap - category",
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="SitemapHome",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("sitemap", models.TextField(help_text="The sitemap XML")),
                ("created_at", models.DateTimeField(auto_now_add=True, help_text="When the data was fetched")),
                ("updated_at", models.DateTimeField(auto_now=True, help_text="When the data was last updated")),
            ],
            options={
                "verbose_name": "Webhallen Sitemap - home",
                "verbose_name_plural": "Webhallen Sitemap - home",
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="SitemapInfoPages",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("sitemap", models.TextField(help_text="The sitemap XML")),
                ("created_at", models.DateTimeField(auto_now_add=True, help_text="When the data was fetched")),
                ("updated_at", models.DateTimeField(auto_now=True, help_text="When the data was last updated")),
            ],
            options={
                "verbose_name": "Webhallen Sitemap - info pages",
                "verbose_name_plural": "Webhallen Sitemap - info pages",
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="SitemapManufacturer",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("sitemap", models.TextField(help_text="The sitemap XML")),
                ("created_at", models.DateTimeField(auto_now_add=True, help_text="When the data was fetched")),
                ("updated_at", models.DateTimeField(auto_now=True, help_text="When the data was last updated")),
            ],
            options={
                "verbose_name": "Webhallen Sitemap - manufacturer",
                "verbose_name_plural": "Webhallen Sitemap - manufacturer",
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="SitemapProduct",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("sitemap", models.TextField(help_text="The sitemap XML")),
                ("created_at", models.DateTimeField(auto_now_add=True, help_text="When the data was fetched")),
                ("updated_at", models.DateTimeField(auto_now=True, help_text="When the data was last updated")),
            ],
            options={
                "verbose_name": "Webhallen Sitemap - product",
                "verbose_name_plural": "Webhallen Sitemap - product",
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="SitemapSection",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("sitemap", models.TextField(help_text="The sitemap XML")),
                ("created_at", models.DateTimeField(auto_now_add=True, help_text="When the data was fetched")),
                ("updated_at", models.DateTimeField(auto_now=True, help_text="When the data was last updated")),
            ],
            options={
                "verbose_name": "Webhallen Sitemap - section",
                "verbose_name_plural": "Webhallen Sitemap - section",
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="WebhallenProductJSON",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("webhallen_id", models.PositiveBigIntegerField(help_text="Webhallen product ID", unique=True)),
                ("data", models.JSONField(help_text="JSON data from Webhallen API", null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True, help_text="When the data was fetched")),
                ("updated_at", models.DateTimeField(auto_now=True, help_text="When the data was last updated")),
            ],
            options={
                "verbose_name": "Webhallen data",
                "verbose_name_plural": "Webhallen data",
                "abstract": False,
                "base_manager_name": "prefetch_manager",
                "indexes": [
                    django.contrib.postgres.indexes.GinIndex(fields=["data"], name="webhallen_w_data_4acdb7_gin"),
                ],
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
    ]
